imports:
    - { resource: config.yml }

framework:
    router:
        resource: "%kernel.root_dir%/config/routing_dev.yml"
        strict_requirements: true
    profiler: { only_exceptions: false }

# remove next 4 lines if you are not using standard SQLite database but e.g. MySQL
doctrine:
    dbal:
        # temp workaround for https://github.com/doctrine/dbal/issues/1106: define DB path here
        path: "%kernel.root_dir%/data/blog.sqlite"

web_profiler:
    toolbar: '%kernel.debug%'
    intercept_redirects: false

monolog:
    handlers:
        main:
            type:   stream
            path:   "%kernel.logs_dir%/%kernel.environment%.log"
            level:  info
        console:
            type:   console
            bubble: false
        # uncomment to get logging in your browser
        # you may have to allow bigger header sizes in your Web server configuration
        #firephp:
        #    type:   firephp
        #    level:  info
        #chromephp:
        #    type:   chromephp
        #    level:  info

assetic:
    use_controller: true

#swiftmailer:
#    delivery_address: me@example.com

hautelook_alice:
    db_drivers:
        orm: ~          # Enable Doctrine ORM if is registered
        #mongodb: ~      # Enable Doctrine ODM if is registered
        #phpcr: ~        # Enable Doctrine PHPCR ODM if is registered
    locale: en_US       # Locale to used for faker; must be a valid Faker locale otherwise will fallback to en_EN
    seed: 1             # A seed to make sure faker generates data consistently across runs, set to null to disable
    persist_once: false # Only persist objects once if multiple files are passed
    loading_limit: 5    # Maximum number of time the loader will try to load the files passed

services:
    hautelook_alice.bare_faker:
        class: Faker\Generator
        lazy: true
        arguments:
            - %hautelook_alice.locale%
        calls:
            - [ seed, [ %hautelook_alice.seed% ] ]

    app.faker.processor_method_factory:
        class: AppBundle\Faker\FakerProcessorMethodFactory
        arguments:
            - "@hautelook_alice.faker.provider_chain"

    app.faker.processor_method:
        class: Nelmio\Alice\Instances\Processor\Methods\Faker
        factory: ["@app.faker.processor_method_factory", createFakerProcessorMethod]

    app.faker.a3mg:
        class: AppBundle\Faker\Provider\a3mgFaker
        tags:
            - { name: bazinga_faker.provider }
            - { name: hautelook_alice.faker.provider }
        arguments:
            - "@doctrine.orm.entity_manager"
            - null #"@sonata.media.manager.media"
            - "@service_container" # I need it to prevent cyclic dependency. It's dev-only service anyway.
            - null #"@sonata.classification.manager.category"
            - null #"@sonata.classification.manager.context"
            - "@hautelook_alice.bare_faker"